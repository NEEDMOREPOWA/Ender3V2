######################################################################
#    Z_OFFSET
######################################################################

[gcode_macro ZOFFSET_SETUP]
description: Starts Z-Offset Calibration, under 30 degrees Celsius
gcode:
  TURN_OFF_HEATERS
  {% if printer.heater_bed.temperature > 40 %}
    {action_respond_info("Bed temperature too high")}
  {% elif printer.extruder.temperature > 40 %}
    {action_respond_info("Extruder temperature too High")}
  {% else %}
  G28
  PROBE_CALIBRATE
  {% endif %}

[gcode_macro Z_Down_01]
description: Moves Z down by 0.1
gcode:
  TESTZ Z=-.1

[gcode_macro Z_Up_01]
description: Moves Z up by 0.1
gcode:
  TESTZ Z=+.1

[gcode_macro Abort_Setup]
description: Aborts the Z-Offset calibration
gcode:
  ABORT

[gcode_macro ACCEPT_SAVE]
description: Accepts the Z-Offset and saves the config
gcode:
  ACCEPT
  SAVE_CONFIG

[gcode_macro SAVE]
description: Accepts the Z-Offset and saves the config
gcode:
  SAVE_CONFIG

######################################################################
#    PID COMMAND
######################################################################

[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %} 
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG
 
[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(80)|float %} 
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG

######################################################################
#    SCREW_TILT
######################################################################

[gcode_macro SCREW_TILT]
description: Heats bed and starts process to level the bed with the screws
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(80)|float %} 
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
  G28
  M190 S65
  SCREWS_TILT_CALCULATE

######################################################################
#    PRIME_EXTRUDER
######################################################################

[gcode_macro PRIME_EXTRUDER]
description: Move to left and draw a line to prime extruder
gcode:
    SAVE_GCODE_STATE NAME=prime_extruder_state
    #Home 
    G28
    #Set Bed temp and wait for it to be reached
    M190 S80
    # Reset Extruder to zero
    G92 E0
    # Move Z Axis up
    G1 Z2.0 F3000
    #Set Extruder temp and wait for it to be reached
    M109 S200 T0
    # Move to start position
    G1 X2.0 Y20 Z0.40 F5000.0
    # Draw the first line
    G1 X2.0 Y200.0 Z0.40 F1500.0 E20
    # Move to side a little
    G1 X2.8 Y200.0 Z0.40 F5000.0
    # Draw the second line
    G1 X2.4 Y20 Z0.40 F1500.0 E30
    # Reset Extruder
    G92 E0
    # Move Z Axis up
    G1 Z2.0 F3000
    #Cool down Extruder
    M104 S0
    #Move to center
    G1 X117.5 Y117.5 Z50
    #Cool down Bed
    M140 S0
    RESTORE_GCODE_STATE NAME=prime_extruder_state

######################################################################
#    SHOW_PRINT
######################################################################

[gcode_macro SHOW_PRINT]
description: Moves the extruder out of the way and bed forward
gcode:
    {% set Z = params.Z|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ Z, z_diff ] | min%}
    G1 Z{ z_safe_lift }
    G1 X0 Y220 F4000

######################################################################
#    DISABLE_STEPPERS
######################################################################

[gcode_macro DISABLE_STEPPERS]
description: Disables the printers stepper motors
gcode:
  M84 X Y E

######################################################################
#    PreHeat
######################################################################

[gcode_macro Preheat_PLA]
gcode = 
	STATUS_HEATING
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=190
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=70

######################################################################
#    TEST_SPEED
######################################################################  

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED